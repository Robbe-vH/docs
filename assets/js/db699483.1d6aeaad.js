"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9721],{47316:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=t(85893),r=t(11151);const s={sidebar_position:4,sidebar_label:"Deploy with Docker on Windows",description:"A portable way to manage your real time test results. Using Docker makes it easy to share test execution report and collaborate with other team members."},i="Deploy with Docker on Windows",a={id:"installation-steps/DeployWithDockerOnWindows",title:"Deploy with Docker on Windows",description:"A portable way to manage your real time test results. Using Docker makes it easy to share test execution report and collaborate with other team members.",source:"@site/docs/installation-steps/DeployWithDockerOnWindows.md",sourceDirName:"installation-steps",slug:"/installation-steps/DeployWithDockerOnWindows",permalink:"/docs/installation-steps/DeployWithDockerOnWindows",draft:!1,unlisted:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/installation-steps/DeployWithDockerOnWindows.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Deploy with Docker on Windows",description:"A portable way to manage your real time test results. Using Docker makes it easy to share test execution report and collaborate with other team members."},sidebar:"docs",previous:{title:"Deploy with Docker on Linux/Mac",permalink:"/docs/installation-steps/DeployWithDockerOnLinuxMac"},next:{title:"Deploy without Docker",permalink:"/docs/installation-steps/DeployWithoutDocker"}},l={},c=[{value:"Updating ReportPortal with Docker",id:"updating-reportportal-with-docker",level:2},{value:"ReportPortal Services",id:"reportportal-services",level:2}];function d(e){const o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"deploy-with-docker-on-windows",children:"Deploy with Docker on Windows"}),"\n",(0,n.jsx)(o.p,{children:'In case you went with Docker on Windows, please make sure you changed the \'volumes\' value for postgres container from "For unix host" to the "For windows host":'}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-Shell",children:"  volumes:\n    # For windows host\n    - postgres:/var/lib/postgresql/data\n    # For unix host\n    # - ./data/postgres:/var/lib/postgresql/data\n"})}),"\n",(0,n.jsxs)(o.blockquote,{children:["\n",(0,n.jsx)(o.p,{children:"If you haven\u2019t done this, you will get an error"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-Shell",children:"data directory \u201c/var/lib/postgresql/data/pgdata\u201d has wrong ownership\n"})}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:"Then uncomment the following:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-Shell",children:"    volumes:\n     # For unix host\n     # - ./data/storage:/data \n     # For windows host\n      - minio:/data\n"})}),"\n",(0,n.jsx)(o.p,{children:"And after that uncomment the following:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-Shell",children:"# Docker volume for Windows host\nvolumes:\n  postgres:\n  minio:\n"})}),"\n",(0,n.jsx)(o.h2,{id:"updating-reportportal-with-docker",children:"Updating ReportPortal with Docker"}),"\n",(0,n.jsx)(o.p,{children:"Updating ReportPortal with Docker is a two step process."}),"\n",(0,n.jsxs)(o.p,{children:["In the first step, your Docker Compose file should be replaced with a new one (with the latest version services) from ",(0,n.jsx)(o.a,{href:"https://github.com/reportportal/reportportal/blob/master/docker-compose.yml",children:"here"}),"."]}),"\n",(0,n.jsx)(o.p,{children:"The second step is update / redeploy the application using the following command:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-Shell",children:"docker-compose -p reportportal up -d --force-recreate\n"})}),"\n",(0,n.jsx)(o.p,{children:"There is no strict need for backup / restore the data if you are keep the postgres, elasticsearch & minio volumes. However, it is recommended (see Maintain commands Cheat sheet)."}),"\n",(0,n.jsx)(o.h2,{id:"reportportal-services",children:"ReportPortal Services"}),"\n",(0,n.jsx)(o.p,{children:"The ReportPortal consists of the following services:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Authorization Service. In charge of access tokens distribution."}),"\n",(0,n.jsx)(o.li,{children:"Gateway Service. Main entry point to application. Port used by gateway should be opened and accessible from outside network."}),"\n",(0,n.jsx)(o.li,{children:"API Service. Main application API."}),"\n",(0,n.jsx)(o.li,{children:"UI Service. All statics for user interface."}),"\n",(0,n.jsx)(o.li,{children:"Analyzer Service. Collects and processes the information, then sends it to ElasticSearch"}),"\n",(0,n.jsx)(o.li,{children:"Index Service. Responsible for redirections, collection of services information, handling errors"}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,o,t)=>{t.d(o,{Z:()=>a,a:()=>i});var n=t(67294);const r={},s=n.createContext(r);function i(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);