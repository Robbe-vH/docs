"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1451],{6028:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=i(85893),t=i(11151);const o={sidebar_position:1,sidebar_label:"Components Overview"},s="Components Overview",a={id:"reportportal-configuration/ComponentsOverview",title:"Components Overview",description:"Gateway",source:"@site/docs/reportportal-configuration/ComponentsOverview.md",sourceDirName:"reportportal-configuration",slug:"/reportportal-configuration/ComponentsOverview",permalink:"/docs/reportportal-configuration/ComponentsOverview",draft:!1,unlisted:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/reportportal-configuration/ComponentsOverview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Components Overview"},sidebar:"docs",previous:{title:"ReportPortal Configuration",permalink:"/docs/category/reportportal-configuration"},next:{title:"Creation of project and adding users",permalink:"/docs/reportportal-configuration/CreationOfProjectAndAddingUsers"}},c={},l=[{value:"Gateway",id:"gateway",level:2},{value:"API Service",id:"api-service",level:2},{value:"UAT Service",id:"uat-service",level:2},{value:"Analyzer Service",id:"analyzer-service",level:2},{value:"Migrations Service",id:"migrations-service",level:2},{value:"Index Service",id:"index-service",level:2},{value:"UI Service",id:"ui-service",level:2}];function d(e){const n={a:"a",br:"br",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"components-overview",children:"Components Overview"}),"\n",(0,r.jsx)(n.h2,{id:"gateway",children:"Gateway"}),"\n",(0,r.jsx)(n.p,{children:"Gateway is a main entry point to application services. It is in-charge of routing requests to appropriate service and load balancing.\nThere are two options proposed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://traefik.io",children:"Traefik"})," for Docker installation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.nginx.com/products/nginx/kubernetes-ingress-controller",children:"NGINX Ingress Controller"})," for Kubernetes"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-service",children:"API Service"}),"\n",(0,r.jsx)(n.p,{children:"The API service is the core of ReportPortal TestOps tool. It is in-charge of handling incoming requests from agents and UI."}),"\n",(0,r.jsx)(n.h2,{id:"uat-service",children:"UAT Service"}),"\n",(0,r.jsx)(n.p,{children:"The UAT (Unified Authorization Trap) service is module that authenticate users and creates/revokes user tokens.\nIt supports various types of authentication mechanisms:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Basic Auth"}),"\n",(0,r.jsx)(n.li,{children:"GitHub Auth (OAuth2)"}),"\n",(0,r.jsx)(n.li,{children:"LDAP Auth\nThe UAT service itself is a OAuth2 server that authenticates a user using mechanisms mentioned\nbelow and creates internal OAuth2 token which is used by UI and agents. There are two types of tokens:"}),"\n",(0,r.jsx)(n.li,{children:"UI (expiring token)"}),"\n",(0,r.jsx)(n.li,{children:"API - non-expiring token, intended to use on agent side"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"analyzer-service",children:"Analyzer Service"}),"\n",(0,r.jsxs)(n.p,{children:["Keeps index of user logs per project and provides ability to perform search by that index. Used by auto-analysis functionality.",(0,r.jsx)(n.br,{}),"\n","Collects and processes the information, then sends it to Elasticsearch."]}),"\n",(0,r.jsx)(n.h2,{id:"migrations-service",children:"Migrations Service"}),"\n",(0,r.jsx)(n.p,{children:"Database migrations written in Go. Migrate reads migrations from sources and applies them in correct order to a database."}),"\n",(0,r.jsx)(n.h2,{id:"index-service",children:"Index Service"}),"\n",(0,r.jsx)(n.p,{children:"The Index services handle requests that do not match any pattern of other services.\nIt also aggregates some information/health data from other services to provide UI with that information."}),"\n",(0,r.jsx)(n.h2,{id:"ui-service",children:"UI Service"}),"\n",(0,r.jsx)(n.p,{children:"All statics for user interface."})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var r=i(67294);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);