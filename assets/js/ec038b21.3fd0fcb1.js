"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[14735],{63220:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=i(85893),s=i(11151);const o={},t="Back-end Java contribution guide",l={id:"dev-guides/BackEndJavaContributionGuide",title:"Back-end Java contribution guide",description:"Useful links",source:"@site/docs/dev-guides/BackEndJavaContributionGuide.mdx",sourceDirName:"dev-guides",slug:"/dev-guides/BackEndJavaContributionGuide",permalink:"/docs/dev-guides/BackEndJavaContributionGuide",draft:!1,unlisted:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/dev-guides/BackEndJavaContributionGuide.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Attachments (Screenshots) Guide",permalink:"/docs/dev-guides/AttachmentsGuide"},next:{title:"Interactions between API and Analyzer",permalink:"/docs/dev-guides/InteractionsBetweenAPIAndAnalyzer"}},a={},d=[{value:"Useful links",id:"useful-links",level:2},{value:"Deployment components description",id:"deployment-components-description",level:2},{value:"Code conventions",id:"code-conventions",level:2},{value:"IDE Formatter",id:"ide-formatter",level:3},{value:"Code style",id:"code-style",level:3},{value:"Git branch requirements",id:"git-branch-requirements",level:3},{value:"Open-source contribution workflow",id:"open-source-contribution-workflow",level:2},{value:"Dev environment setup",id:"dev-environment-setup",level:2},{value:"Pre requirements",id:"pre-requirements",level:3},{value:"How to keep DB data up-to-date",id:"how-to-keep-db-data-up-to-date",level:4},{value:"Service Authorization",id:"service-authorization",level:3},{value:"Service API",id:"service-api",level:3},{value:"Service Jobs",id:"service-jobs",level:3},{value:"Service UI",id:"service-ui",level:3},{value:"Development workflow",id:"development-workflow",level:2},{value:"Introduction to dependencies",id:"introduction-to-dependencies",level:3},{value:"Updates in dependencies",id:"updates-in-dependencies",level:3},{value:"Summary notes",id:"summary-notes",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{MediaViewer:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MediaViewer",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"back-end-java-contribution-guide",children:"Back-end Java contribution guide"}),"\n",(0,r.jsx)(n.h2,{id:"useful-links",children:"Useful links"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://reportportal.io",children:"Landing page"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://reportportal.io/docs",children:"Official documentation"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/reportportal/reportportal/wiki/Contribution",children:"Contribution notes on GitHub"})}),"\n",(0,r.jsx)(n.h2,{id:"deployment-components-description",children:"Deployment components description"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://traefik.io",children:"Traefik"})," as reversed proxy and application entry point"]}),"\n",(0,r.jsxs)(n.li,{children:["Data analysis","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://opensearch.org/",children:"OpenSearch"})," as logs analysis data storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-auto-analyzer",children:"Service Analyzer"})," as log messages analysis tool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-auto-analyzer",children:"Service Analyzer Train"})," is a ",(0,r.jsx)(n.code,{children:"Service Analyzer"})," running in training mode to increase analysis quality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-metrics-gatherer",children:"Service Metrics Gatherer"})," as training model manager and ",(0,r.jsx)(n.code,{children:"Service Analyzer"})," monitoring"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Database","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.postgresql.org",children:"Postgresql"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/migrations",children:"Service Migrations"})," - service for DB schema and data updates"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.rabbitmq.com",children:"RabbitMQ"})," - message broker for inter-service communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://min.io",children:"Minio"})," - binary data storage (alternative to plain filesystem storage)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-index",children:"Service Index"})," - gateway service with services metadata resolving mechanism"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-ui",children:"Service UI"})," - ReportPortal web UI"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"There are three Java repositories that are part of the whole RP deployment:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-api",children:"Service API"})," - REST API service as ReportPortal functionality provider"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-authorization",children:"Service Authorization"})," - REST Authorization service for users authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-jobs",children:"Service Jobs"})," - Service with jobs to process data in the back-ground"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-conventions",children:"Code conventions"}),"\n",(0,r.jsx)(n.h3,{id:"ide-formatter",children:"IDE Formatter"}),"\n",(0,r.jsxs)(n.p,{children:["Settings file can be found at: ",(0,r.jsx)(n.a,{href:"https://github.com/reportportal/reportportal/blob/master/idea_formatting_profile.xml",children:"https://github.com/reportportal/reportportal/blob/master/idea_formatting_profile.xml"}),"\nSteps to import:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Click on IDEA "Preferences"'}),"\n",(0,r.jsx)(n.li,{children:'Choose "Editor" section'}),"\n",(0,r.jsx)(n.li,{children:'Click on "Code style"'}),"\n",(0,r.jsx)(n.li,{children:'In "Scheme" section click on settings wheel \u2192 Import Scheme \u2192 IntelliJ IDEA code style XML'}),"\n"]}),"\n",(0,r.jsx)(o,{src:i(65914),alt:"Idea Formatter"}),"\n",(0,r.jsx)(n.h3,{id:"code-style",children:"Code style"}),"\n",(0,r.jsx)(n.p,{children:"This document is aimed to improve some points in existing code base and implementation/design approaches synchronization inside team. It's a blueprint for now, but will be improved."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Code should be simple and readable as possible."}),"\n",(0,r.jsx)(n.li,{children:"Avoid using useless interfaces. For our case, if we aren't planning to extend functionality, and can simply refactor\n(For example it isn't some separated library build with some magic),\nand if we don't need another implementation for example for some tests(mock, anonymous classes etc.),\ncode auto-generation (@repository for example) and so on(another real needed cases), than we should to avoid creating interface."}),"\n",(0,r.jsx)(n.li,{children:"Methods and Classes should be named accordingly to their responsibilities, name should be clear or description should be added otherwise\n(For instance, difficult to describe responsibility in only few words)."}),"\n",(0,r.jsx)(n.li,{children:"Methods with the same names(overloading/overriding) should do similar things."}),"\n",(0,r.jsx)(n.li,{children:"Parameters in overloaded methods should have the same order of the same parameters: same parameters at the beginning of the list, different at the end of the list."}),"\n",(0,r.jsxs)(n.li,{children:["Name of parameters should be clear. For example, if used id, it should be clear to which entity it's related. May be used ",(0,r.jsx)(n.code,{children:"entity"}),"Id instead (userId, projectId, etc.)."]}),"\n",(0,r.jsx)(n.li,{children:"Same related to return parameters. Should be clear, for example, if it's Long, and it's not some calculations, than should be added explanation in description."}),"\n",(0,r.jsx)(n.li,{children:"Try to use suitable structure, to avoid useless converting."}),"\n",(0,r.jsx)(n.li,{children:"Try to move usually used flows (checks, or structure processing, etc.) to utils."}),"\n",(0,r.jsxs)(n.li,{children:["Avoid using manually work with threads (use defined ",(0,r.jsx)(n.code,{children:"TaskExecutor"})," or create a new one)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Optional"})," and ",(0,r.jsx)(n.code,{children:"Stream"})," should be mostly used in cases when it really improves readability."]}),"\n",(0,r.jsxs)(n.li,{children:["Always return ",(0,r.jsx)(n.code,{children:"Optional"})," instead of ",(0,r.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["For ",(0,r.jsx)(n.code,{children:"Stream"})," avoid double terminal operations. (Stream to list then back to stream to collect to list)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"git-branch-requirements",children:"Git branch requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Working branch name must be started with jira-id(EPMRPP-DDD)(-optional-description), for example:\n",(0,r.jsx)(n.code,{children:"EPMRPP-444"})," or ",(0,r.jsx)(n.code,{children:"EPMRPP-443-fix-some-bugs"}),". That also means, all Jira branches must be related to some Jira ticked, only jira-id should be a trigger for branch creation\n(excluding some technical branches master, develop, release etc)."]}),"\n",(0,r.jsxs)(n.li,{children:["All commit messages in ",(0,r.jsx)(n.code,{children:"master"}),", ",(0,r.jsx)(n.code,{children:"develop"})," and ",(0,r.jsx)(n.code,{children:"release"})," branches must be started with jira-id as well: EPMRPP-445 Some important fix."]}),"\n",(0,r.jsx)(n.li,{children:"Better to divide commits into small bug logic completed parts into the branch, to ease understanding during code review."}),"\n",(0,r.jsxs)(n.li,{children:["When merging a PR into the mainstream branch (",(0,r.jsx)(n.code,{children:"master"}),", ",(0,r.jsx)(n.code,{children:"develop"}),", ",(0,r.jsx)(n.code,{children:"release"}),") all commits should be squashed and provided with suitable description with jira-id by person who performs merge."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["For contributors that have no access to our Jira tasks branch name prefix should be GitHub ",(0,r.jsx)(n.code,{children:"issue"})," name"]}),"\nIt is highly recommended creating an issue that doesn't already exist and then fix it within your PR.\nEven if it's some new function. Issue will stay there with all your ideas and comments from other contributors.\nAlso, RP users who are not developers might prefer to look through issues\nrather than PRs to check if something is already fixed in a new version of ReportPortal."]}),"\n",(0,r.jsx)(n.h2,{id:"open-source-contribution-workflow",children:"Open-source contribution workflow"}),"\n",(0,r.jsxs)(n.p,{children:["All features fixes should be added to ",(0,r.jsx)(n.code,{children:"develop"})," branch only, exclusions: hot-fixes"]}),"\n",(0,r.jsx)(n.p,{children:"Changes applying workflow:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clone repository or fork from it"}),"\n",(0,r.jsxs)(n.li,{children:["Checkout ",(0,r.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,r.jsx)(n.li,{children:"Create branch according to name policy"}),"\n",(0,r.jsx)(n.li,{children:"Push branch to the remote"}),"\n",(0,r.jsxs)(n.li,{children:["Create PR according to name policy into the ",(0,r.jsx)(n.code,{children:"develop"})," branch of the RP repository"]}),"\n",(0,r.jsx)(n.li,{children:"Review and merge/reject PR (squash commits in one during merge)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dev-environment-setup",children:"Dev environment setup"}),"\n",(0,r.jsx)(n.h3,{id:"pre-requirements",children:"Pre requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Postgresql should be deployed"}),"\n",(0,r.jsx)(n.li,{children:"Service Migration should fill/update DB data"}),"\n",(0,r.jsx)(n.li,{children:"Binary data storage should be configured"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["To deploy DB with the latest schema we need the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," that looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: \'2.4\'\nservices:\n\n  postgres:\n    image: postgres:12-alpine\n    shm_size: \'512m\'\n    environment:\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n      POSTGRES_DB: reportportal\n    volumes:\n      # For unix host\n      - ./data/postgres:/var/lib/postgresql/data\n      # For windows host\n      # - postgres:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    command:\n      -c checkpoint_completion_target=0.9\n      -c work_mem=96MB\n      -c wal_writer_delay=20ms\n      -c synchronous_commit=off\n      -c wal_buffers=32MB\n      -c min_wal_size=2GB\n      -c max_wal_size=4GB\n    healthcheck:\n      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]\n      interval: 10s\n      timeout: 120s\n      retries: 10\n    restart: always\n  \n  db-scripts:\n    image: reportportal/migrations:5.6.0\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      POSTGRES_SERVER: postgres\n      POSTGRES_PORT: 5432\n      POSTGRES_DB: reportportal\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n    restart: on-failure\n'})}),"\n",(0,r.jsx)(n.h4,{id:"how-to-keep-db-data-up-to-date",children:"How to keep DB data up-to-date"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"image: reportportal/migrations:5.6.0"})," is the released version of the migrations service, but if there were any changes in the ",(0,r.jsx)(n.code,{children:"develop"})," branch\nthey won't be available in released version so migrated DB schema may be outdated.\nTo prevent this and have DB data up-to-date you should do the following:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["clone/update ",(0,r.jsx)(n.a,{href:"https://github.com/reportportal/migrations",children:"Migrations Repository"})]}),"\n",(0,r.jsxs)(n.li,{children:["checkout ",(0,r.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,r.jsx)(n.li,{children:"run the following command:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker-compose run --rm migrations\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This flow will use all SQL scripts in the ",(0,r.jsx)(n.code,{children:"develop"})," branch and update your locally running DB instance."]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["By default, filesystem storage is used for binary data (all data will be stored on your local filesystem).\nIf you want to store binaries using Minio (as we do on our production) you should deploy it too by adding this to already existing ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'  minio:\n    image: minio/minio:RELEASE.2020-10-27T04-03-55Z\n    ports:\n      - \'9000:9000\'\n    volumes:\n      # For unix host\n      - ./data/storage:/data\n      # For windows host\n      # - minio:/data\n    environment:\n      MINIO_ACCESS_KEY: minio\n      MINIO_SECRET_KEY: minio123\n    command: server /data\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n    restart: always\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Pay attention to ",(0,r.jsx)(n.code,{children:"Windows"})," comments - if you develop on ",(0,r.jsx)(n.code,{children:"Windows"})," uncomment sections for windows\nand comment ",(0,r.jsx)(n.code,{children:"Linux"}),"-related sections both for Postgres and Minio\nthen add next statement to the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"volumes:\n  postgres:\n  minio:\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As the result we have the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: \'2.4\'\nservices:\n\n  postgres:\n    image: postgres:12-alpine\n    shm_size: \'512m\'\n    environment:\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n      POSTGRES_DB: reportportal\n    volumes:\n      # For unix host\n      - ./data/postgres:/var/lib/postgresql/data\n      # For windows host\n      # - postgres:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    command:\n      -c checkpoint_completion_target=0.9\n      -c work_mem=96MB\n      -c wal_writer_delay=20ms\n      -c synchronous_commit=off\n      -c wal_buffers=32MB\n      -c min_wal_size=2GB\n      -c max_wal_size=4GB\n    healthcheck:\n      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]\n      interval: 10s\n      timeout: 120s\n      retries: 10\n    restart: always\n  \n  db-scripts:\n    image: reportportal/migrations:5.6.0\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      POSTGRES_SERVER: postgres\n      POSTGRES_PORT: 5432\n      POSTGRES_DB: reportportal\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n    restart: on-failure\n\n  minio:\n    image: minio/minio:RELEASE.2020-10-27T04-03-55Z\n    ports:\n      - \'9000:9000\'\n    volumes:\n      # For unix host\n      - ./data/storage:/data\n      # For windows host\n      # - minio:/data\n    environment:\n      MINIO_ACCESS_KEY: minio\n      MINIO_SECRET_KEY: minio123\n    command: server /data\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n    restart: always\n    \nvolumes:\n  postgres:\n  minio:\n'})}),"\n",(0,r.jsx)(n.p,{children:"This file will be updated in next sections, but we can already start developing our first service"}),"\n",(0,r.jsx)(n.h3,{id:"service-authorization",children:"Service Authorization"}),"\n",(0,r.jsxs)(n.p,{children:["To start up Service Authorization you should fill marked values in the ",(0,r.jsx)(n.code,{children:"application.yaml"})," file:"]}),"\n",(0,r.jsx)(o,{src:i(9501),alt:"Start Service Authorization"}),"\n",(0,r.jsx)(o,{src:i(82466),alt:"Values you should fill"}),"\n",(0,r.jsxs)(n.p,{children:["(Optional) change ",(0,r.jsx)(n.code,{children:"context-path"})," value from ",(0,r.jsx)(n.code,{children:"/"})," to ",(0,r.jsx)(n.code,{children:"/uat"})," if you are planning to deploy Service UI locally (will be described later)"]}),"\n",(0,r.jsx)(n.h3,{id:"service-api",children:"Service API"}),"\n",(0,r.jsx)(n.p,{children:"Before starting Service API we should add RabbitMQ to our deployment."}),"\n",(0,r.jsx)(n.p,{children:"In ReportPortal RabbitMQ is required for 3 purposes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"inter-service communication between Service API and Service Analyzer."}),"\n",(0,r.jsx)(n.li,{children:"async reporting feature"}),"\n",(0,r.jsx)(n.li,{children:"user activity event publishing"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["To add RabbitMQ to our deployment we should add the following to our existing ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'  rabbitmq:\n    image: rabbitmq:3.7.16-management\n    ports:\n      - "5672:5672"\n      - "15672:15672"\n    environment:\n      RABBITMQ_DEFAULT_USER: "rabbitmq"\n      RABBITMQ_DEFAULT_PASS: "rabbitmq"\n    healthcheck:\n      test: ["CMD", "rabbitmqctl", "status"]\n      retries: 5\n    restart: always\n'})}),"\n",(0,r.jsxs)(n.p,{children:["We may start deploying Service API right now without any issues, but all Analyzer-related interactions (publishing to analyzer queues and receiving response) won't succeed.\nWe need to deploy Service Analyzer and all its required services. So we add the following to our ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'  opensearch:\n    image: opensearchproject/opensearch:2.11.0\n    container_name: opensearch\n    environment:\n      discovery.type: single-node\n      plugins.security.disabled: "true"\n      bootstrap.memory_lock: "true"\n      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m\n      DISABLE_INSTALL_DEMO_CONFIG: "true"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n      - "9200:9200"\n      - "9600:9600"\n    volumes:\n      - opensearch:/usr/share/opensearch/data\n    healthcheck:\n      test: ["CMD", "curl","-s" ,"-f", "http://0.0.0.0:9200/_cat/health"]\n    restart: always\n\n  analyzer: \n    image: reportportal/service-auto-analyzer:5.6.0\n    environment:\n      LOGGING_LEVEL: info\n      AMQP_EXCHANGE_NAME: analyzer-default\n      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672\n      ES_HOSTS: http://opensearch:9200\n      # ES_USER: \n      # ES_PASSWORD: \n      # MINIO_SHORT_HOST: minio:9000\n      # MINIO_ACCESS_KEY: minio\n      # MINIO_SECRET_KEY: minio123\n    depends_on:\n      opensearch:\n        condition: service_started\n      rabbitmq:\n        condition: service_healthy\n    restart: always\n'})}),"\n",(0,r.jsxs)(n.p,{children:["As the result our ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," should be like ",(0,r.jsx)(n.a,{href:"pathname:///files/DockerCompose.yml",children:"this"})]}),"\n",(0,r.jsxs)(n.p,{children:["To start up Service API you should fill marked values in the ",(0,r.jsx)(n.code,{children:"application.yaml"})," file:"]}),"\n",(0,r.jsx)(o,{src:i(9501),alt:"Start Service API"}),"\n",(0,r.jsx)(o,{src:i(82466),alt:"Authorization binary Configuration"}),"\n",(0,r.jsx)(o,{src:i(26874),alt:"Rabbitmq Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["(Optional) change ",(0,r.jsx)(n.code,{children:"context-path"})," value from ",(0,r.jsx)(n.code,{children:"/"})," to ",(0,r.jsx)(n.code,{children:"/api"})," if you are planning to deploy Service UI locally (will be described later)"]}),"\n",(0,r.jsx)(n.h3,{id:"service-jobs",children:"Service Jobs"}),"\n",(0,r.jsxs)(n.p,{children:["To start up Service Jobs you should fill marked values in the ",(0,r.jsx)(n.code,{children:"application.yaml"})," file:"]}),"\n",(0,r.jsx)(o,{src:i(9501),alt:"Start Service Jobs"}),"\n",(0,r.jsx)(o,{src:i(82466),alt:"Values for binary"}),"\n",(0,r.jsx)(o,{src:i(26874),alt:"Values for Rabbitmq"}),"\n",(0,r.jsx)(n.h3,{id:"service-ui",children:"Service UI"}),"\n",(0,r.jsx)(n.p,{children:"After all back-end services deployed you may want to interact with them not only using tool like Postman but use ReportPortal UI too.\nTo do this you should do the next steps:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["clone/update ",(0,r.jsx)(n.a,{href:"https://github.com/reportportal/service-ui",children:"Service UI repository"})]}),"\n",(0,r.jsxs)(n.li,{children:["checkout ",(0,r.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,r.jsxs)(n.li,{children:["apply changes to ",(0,r.jsx)(n.code,{children:"dev.config.js"})," file"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"before:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"proxy: [\n        {\n          context: ['/composite', '/api/', '/uat/'],\n          target: process.env.PROXY_PATH,\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n      ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"after:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"proxy: [\n        {\n          context: ['/composite', '/api/'],\n          target: 'http://localhost:8585',\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n        {\n          context: ['/uat/'],\n          target: 'http://localhost:9999',\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n      ]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"install NodeJs if it's not installed yet (minimum version is 10)"}),"\n",(0,r.jsx)(n.li,{children:"run Service UI from the root folder(service-ui) using commands:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cd app\nnpm install\nnpm run dev\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["open Service UI page on ",(0,r.jsx)(n.code,{children:"localhost"})," with port ",(0,r.jsx)(n.code,{children:"3000"})," and try to login using default credentials"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development workflow"}),"\n",(0,r.jsx)(n.h3,{id:"introduction-to-dependencies",children:"Introduction to dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["All our Java services besides common dependencies like ",(0,r.jsx)(n.code,{children:"spring-..."})," also have ReportPortal libraries that are separated to different repositories.\nThere is a full list of these dependencies:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/commons-dao",children:"Commons DAO"})," - Data layer dependency with domain model configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/commons-model",children:"Commons Model"})," - REST models dependency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/commons",children:"Commons"})," - Some common utils for multiple usage purposes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/commons-rules",children:"Commons Rules"})," - Business rules validation dependency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/plugin-api",children:"Plugin API"})," - ReportPortal plugin API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/reportportal/commons-bom",children:"Commons BOM"})," - POM config for releases"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"updates-in-dependencies",children:"Updates in dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["Let's pretend that you found a bug when you try to get user from the DB.\nAll logic is invoked within ",(0,r.jsx)(n.code,{children:"Service API"})," but the code with the bug is not directly in sources but in ",(0,r.jsx)(n.code,{children:"Commons DAO"})," dependency.\nHow to apply a fix and check if everything works fine?\nTo do this you should follow these steps:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["clone/update ",(0,r.jsx)(n.code,{children:"Commons DAO"})," repository"]}),"\n",(0,r.jsxs)(n.li,{children:["checkout ",(0,r.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,r.jsx)(n.li,{children:"make changes"}),"\n",(0,r.jsx)(n.li,{children:"create branch according to the name policy"}),"\n",(0,r.jsx)(n.li,{children:"push to the remote"}),"\n",(0,r.jsxs)(n.li,{children:["create PR to the ",(0,r.jsx)(n.code,{children:"develop"})," branch\nNow you have your branch on the GitHub page and can see the ",(0,r.jsx)(n.code,{children:"commit hash"}),":"]}),"\n"]}),"\n",(0,r.jsx)(o,{src:i(57367),alt:"Commit hash"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"go to the service where your changes should be applied (Service API in our example)"}),"\n",(0,r.jsxs)(n.li,{children:["copy ",(0,r.jsx)(n.code,{children:"commit hash"})," and replace already existing in the ",(0,r.jsx)(n.code,{children:"build.gradle"})," of the required service (Service API in our example):"]}),"\n"]}),"\n",(0,r.jsx)(o,{src:i(60280),alt:"Build gradle updated"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["after re-building project using ",(0,r.jsx)(n.code,{children:"gradle"})," dependency will be resolved and downloaded using ",(0,r.jsx)(n.a,{href:"https://jitpack.io",children:"Jitpack"})," tool"]}),"\n",(0,r.jsx)(n.li,{children:"create branch according to the name policy"}),"\n",(0,r.jsx)(n.li,{children:"push to the remote"}),"\n",(0,r.jsxs)(n.li,{children:["create a PR to the ",(0,r.jsx)(n.code,{children:"develop"})," branch"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary-notes",children:"Summary notes"}),"\n",(0,r.jsx)(n.p,{children:"This documentation should help you save your time by configuring ReportPortal local dev environment and give you understanding of some standards/conventions that we try stick to."}),"\n",(0,r.jsx)(n.p,{children:"Simplified development workflow should look like this:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["always have the latest schema and data in your local DB instance using ",(0,r.jsx)(n.a,{href:"#how-to-keep-db-data-up-to-date",children:"this instructions"})]}),"\n",(0,r.jsxs)(n.li,{children:["checkout ",(0,r.jsx)(n.code,{children:"develop"})," branch in the required repository"]}),"\n",(0,r.jsx)(n.li,{children:"make changes"}),"\n",(0,r.jsxs)(n.li,{children:["if changes in dependencies are required:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"go to the dependency repository, make changes, create a branch and PR according to conventions"}),"\n",(0,r.jsxs)(n.li,{children:["using ",(0,r.jsx)(n.code,{children:"commit hash"})," update dependency in the ",(0,r.jsx)(n.code,{children:"build.gradle"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"create branch according to the name policy"}),"\n",(0,r.jsx)(n.li,{children:"push to the remote"}),"\n",(0,r.jsx)(n.li,{children:"create a PR according to the name policy"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},82466:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/AuthBinaryConfig-97c8cb6147fd65b01d0350dbd328c7b0.png"},9501:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/AuthDbConfig-a73eda3410d18b21d1048d7e2040e642.png"},60280:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/BuildGradleUpdated-8fd604f09a870f4791ae70db319d17aa.png"},57367:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/CommitHash-63def4609fff5b777eb35d4210013189.png"},65914:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/IdeaFormatter-9ea482076d71a3be86aa618cb24c6d6b.png"},26874:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/RabbitmqConfig-f47820cdf414130571299246b36aca62.png"},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>t});var r=i(67294);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);